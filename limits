#Max Low
#6-7-18
#Calculus Programming -- Finds and identifies discontinuties and graph?

from math import *



a1 = int(input("enter a start to a range"))
b1 = int(input("enter a end to a range"))
equation = input("Enter an equation")
numberSlopes = 0.01
tollerance = 10000
h = 0.000000001
slope1 = 0
slope2 = 0
k=0
x = 0 
y1 =0
y2 =0
y3 =0
y4 =0


#doubble slash rounds down
total = (b1-a1)//numberSlopes
for i in range (0, total):
    
    if (a1+((k+1)*numberSlopes)+h) < 0.000000000000000000001:
        print("skipped")
        k+=2
        
    x = (a1+(k*numberSlopes)+h)
    y1 = eval(equation)
    
    x = (a1+(k*numberSlopes))
    y2 = eval(equation)
    
    x = (a1+((k+1)*numberSlopes)+h)
    y3 = eval(equation)
    
    x = (a1+((k+1)*numberSlopes))
    y4 = eval(equation)
    
    
    slope1 = (y1-y2)/(h)
    slope2 = (y3-y4)/(h)
    

    if abs(slope1-slope2)>tollerance:
        print(a1+(k*numberSlopes))

    print(slope1)
    print(slope2)
    print(" ")
    k+=1
   
   

"""
x = float(input("Enter a point for the limit"))

# Equation Format: aX^A+bx^B+cx^C+dx^D
a = 1
A = -1
b = 0
B = 0
c = 0
C = 0
d = 0
D = 0



leftLimit = (a*((x-h)**A))+(b*((x-h)**B))+(c*((x-h)**C))+(d*((x-h)**D)) 
atThePoint = (a*(x**A))+(b*(x**B))+(c*(x**C))+(d*(x**D)) 
rightLimit = (a*((x+h)**A))+(b*((x+h)**B))+(c*((x+h)**C))+(d*((x+h)**D)) 
print(eval(equation))

print(atThePoint)
print(leftLimit)
print(rightLimit)



if :
    print("The limit does exist at p and is" )
    
"""
