#Max Low
#6-7-18
#Calculus Programming -- Finds and identifies discontinuties and graph?

from math import *


#defing the function and domain of examination
a1 = float(input("enter a start to a range"))
b1 = float(input("enter a end to a range"))
equation = input("Enter an equation")

#defining for the slope at the point and the sucessive point, h is used in the limit deffinition of a derivive
slope1 = 0
slope2 = 0
h = 0.000000001

# between zero and one will find one hundred slope measurement, set scale
numberSlopes = 0.01
tollerance = 0

#increases to continue cmoing the slope measurements down the function
k=0

#used for definig in reconding the y value of the equation using the eval function, value then used in limit definition of a derivite
x = 0 
y00 = 0
y0 = 0
y1 =0
y2 =0
y3 =0
y4 =0

#doubble slash rounds down
total = (b1-a1)//numberSlopes
total = int(total)
while a1+(k*numberSlopes) <= b1:
    
    x = (a1+((k-1)*numberSlopes)+h)
    y00 = eval(equation)
    
    x = (a1+((k-1)*numberSlopes))
    y0 = eval(equation)
    
    x = (a1+(k*numberSlopes)+h)
    y1 = eval(equation)
    
    x = (a1+(k*numberSlopes))
    y2 = eval(equation)
    
    x = (a1+((k+1)*numberSlopes)+h)
    y3 = eval(equation)
    
    x = (a1+((k+1)*numberSlopes))
    y4 = eval(equation)
    
    slope0 = (y00-y0)/(h)
    slope1 = (y1-y2)/(h)
    slope2 = (y3-y4)/(h)
    
    if abs(slope1) < 0.01: #if the abs of the next point is virtually zero skip over it to avoid often non-diffenercibly pts
        print("critical Pt or Discontinuity within +/- 0.01")
        print(a1+(k*numberSlopes))
        print(slope1)
        print(slope2)
        if slope0 < 0 and slope1 > 0:
            print("local min")
        elif slope1 > 0 and slope2 <0:
            print("local max")
        else:
            print("Only Crital no min or max")
        print(" ")
    
    
    
    tollerance = 0.7*slope2
    if abs(slope1-slope2)>abs(tollerance) and abs(slope1-slope2) > 1:
        print("vertical Asmptote within +/- 0.01")
        print(a1+(k*numberSlopes))
        print(slope1)
        print(slope2)
        print(" ")
        k+=3
        
    k+=1
    
    
    if (eval(b1)-eval(b1-h)) > 0:
        print("The right end is a local Max")
    elif (eval(b1)-eval(b1-h)) < 0:
        print("The right end is a local Min")
        
    if (eval(a1)-eval(a1+h)) > 0:
        print("The Lef end is a local Min")
    elif (eval(a1)-eval(a1+h)) < 0:
        print("The Left end is a local Max")
        

