#Max Low
#6-7-18
#Calculus Programming -- Finds and identifies discontinuties and graph?

from math import *


equation = input("Enter an equation")
a1 = int(input("enter a start to a range"))
b1 = int(input("enter a end to a range"))
numberSlopes = 0.01
tollerance = 0.001
h = 0.0000000001
slope1 = 0
slope2 = 0
k=0





for i in range (a1,b1):
    slope1 = eval(((a1+(k*numberSlopes)+h))-eval((a1+(k*numberSlopes))))/(h)
    slope2 = eval(((a1+(k*numberSlopes)+h))-eval((a1+(k*numberSlopes))))/(h)
    if abs(slope1-slope2)>tollerance:
        print(a1)
    print(slope1)
    k+=1
   
   

"""
x = float(input("Enter a point for the limit"))

# Equation Format: aX^A+bx^B+cx^C+dx^D
a = 1
A = -1
b = 0
B = 0
c = 0
C = 0
d = 0
D = 0



leftLimit = (a*((x-h)**A))+(b*((x-h)**B))+(c*((x-h)**C))+(d*((x-h)**D)) 
atThePoint = (a*(x**A))+(b*(x**B))+(c*(x**C))+(d*(x**D)) 
rightLimit = (a*((x+h)**A))+(b*((x+h)**B))+(c*((x+h)**C))+(d*((x+h)**D)) 
print(eval(equation))

print(atThePoint)
print(leftLimit)
print(rightLimit)



if :
    print("The limit does exist at p and is" )
    
"""
